#!/usr/bin/env bash

# headerファイルの読み込み
. "$dotfiles"/etc/header

OS=$("$dotfiles"/bin/os)
is_mac="$(echo "$OS" | grep 'Darwin')"
is_ubuntu="$(echo "$OS" | grep 'Ubuntu')"
is_redhat="$(echo "$OS" | grep 'RedHat')"

echo "
██████╗  ██████╗ ████████╗███████╗██╗██╗     ███████╗███████╗
██╔══██╗██╔═══██╗╚══██╔══╝██╔════╝██║██║     ██╔════╝██╔════╝
██║  ██║██║   ██║   ██║   █████╗  ██║██║     █████╗  ███████╗
██║  ██║██║   ██║   ██║   ██╔══╝  ██║██║     ██╔══╝  ╚════██║
██████╔╝╚██████╔╝   ██║   ██║     ██║███████╗███████╗███████║
╚═════╝  ╚═════╝    ╚═╝   ╚═╝     ╚═╝╚══════╝╚══════╝╚══════╝
"
echo "
*** ATTENTION ***
This script can change your entire setup.
I recommend to read first. You can even copy commands one by one."

if ! yesno "Are you sure you want to continue?"; then
	error 'Installation failed. Nothing changed.'
	exit 1
fi

log "========================== Start Installation =========================="

if ! [[ "$is_mac" || "$is_ubuntu" || "$is_redhat" ]]; then
	error "Your platform ($(uname -a)) is not supported."
	exit 1
fi

#--------------------------------------------------------------#
##        packages                                            ##
#--------------------------------------------------------------#
echo ""
info "----- Packages -----"

if [ "$is_mac" ]; then
	info "brew update"
	brew update
	brew upgrade
	brew cleanup
	PACKAGES="autoconf bat cmake coreutils curl fontconfig gcc gh git grep lsd pyenv tmux trash-cli wget yarn"
	if yesno "Are you sure you want to install the following packages?: ${PACKAGES}"; then
		brew install "$PACKAGES"
		brew install --cask "warp"
	fi

elif [ "$is_ubuntu" ]; then
	info "apt update"
	sudo apt update
	PACKAGES="bat build-essential cmake coreutils curl git libbz2-dev libffi-dev liblzma-dev libopencv-dev libreadline-dev libsqlite3-dev libssl-dev tk-dev tmux trash-cli unzip wget xsel zlib1g-dev"
	if yesno "Are you sure you want to install the following packages?: ${PACKAGES}"; then
		sudo apt install -y "$PACKAGES"
		sudo snap install "lsd"
	fi

elif [ "$is_redhat" ]; then
	info "yum update"
	sudo yum update
	PACKAGES="git wget curl tmux coreutils make cmake unzip gcc"
	if yesno "Are you sure you want to install the following packages?: ${PACKAGES}"; then
		sudo yum install -y "$PACKAGES"
	fi
fi

#--------------------------------------------------------------#
##        zsh                                                 ##
#--------------------------------------------------------------#
echo ""
info "----- zsh -----"
if [ -x "/bin/zsh" ]; then
	info "The zsh is already installed!!"
elif yesno "Are you sure you want to install zsh?"; then
	ZSH_VERSION=5.9
	wget https://sourceforge.net/projects/zsh/files/zsh/${ZSH_VERSION}/zsh-${ZSH_VERSION}.tar.xz/download -O zsh-${ZSH_VERSION}.tar.xz
	tar xvf zsh-${ZSH_VERSION}.tar.xz

	cd zsh-${ZSH_VERSION} || exit
	./configure --enable-multibyte
	sudo make
	sudo make install

	cd "$dotfiles" || exit
	rm -rf zsh-${ZSH_VERSION}*
fi

echo ""
info "----- prezto -----"
if [ -e "$HOME"/.zprezto ]; then
	info "The zprezto is already installed!!"
elif yesno "Are you sure you want to install prezto?"; then
	git clone https://github.com/sorin-ionescu/prezto "$HOME"/.zprezto
	cd "$HOME"/.zprezto || exit
	git pull && git submodule update --init --recursive
	cd "$dotfiles" || exit
fi

#--------------------------------------------------------------#
##        fzf                                                 ##
#--------------------------------------------------------------#
echo ""
info "----- fzf -----"
if [ -e "$HOME"/.fzf ]; then
	info "The fzf is already installed!!"
elif yesno "Are you sure you want to install fzf?"; then
	git clone https://github.com/junegunn/fzf "$HOME"/.fzf
	"$HOME"/.fzf/install
fi

#--------------------------------------------------------------#
##        nerd font                                           ##
#--------------------------------------------------------------#
echo ""
info "----- nerd font -----"
if yesno "Are you sure you want to install nerd font?"; then
	# source code pro
	wget https://github.com/adobe-fonts/source-code-pro/archive/2.010R-ro/1.030R-it.zip
	unzip 1.030R-it.zip
	mkdir -p "$HOME"/.fonts
	cp source-code-pro-2.010R-ro-1.030R-it/OTF/*.otf "$HOME"/.fonts/
	fc-cache -f -v

	# nerd font
	git clone https://github.com/ryanoasis/nerd-fonts.git
	cd ./nerd-fonts || exit
	./install.sh SourceCodePro

	# cleanup
	cd "$dotfiles" || exit
	rm -rf 1.030R-it.zip
	rm -rf source-code-pro-2.010R-ro-1.030R-it
	rm -rf ./nerd-fonts
fi

#--------------------------------------------------------------#
##           docker                                           ##
#--------------------------------------------------------------#
echo ""
info "----- docker -----"
if [ -d "$HOME"/.docker ]; then
	info "The docker is already installed!!"
elif yesno "Are you sure you want to install docker?"; then
	if [ "$is_mac" ]; then
		info "TODO: あとで実装する"
	fi

	if [ "$is_ubuntu" ]; then
		info docker install
		sudo apt-get update
		sudo apt install ca-certificates curl gnupg lsb-release
		curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
		echo \
			"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
 			$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
		sudo apt-get update
		sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
	fi

	if [ "$is_redhat" ]; then
		info docker install
		sudo yum install -y yum-utils
		sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
		sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin
		sudo systemctl start docker
	fi
fi

#--------------------------------------------------------------#
##        nvm                                                 ##
#--------------------------------------------------------------#
echo ""
info "----- nvm -----"
if [ -d "$HOME"/.nvm ]; then
	info "The pyenv is already installed!!"
elif yesno "Are you sure you want to install docker?"; then
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
fi

#--------------------------------------------------------------#
##        pyenv                                                ##
#--------------------------------------------------------------#
echo ""
info "----- pyenv -----"
if [ -d "$HOME"/.pyenv ]; then
	info "The pyenv is already installed!!"
elif yesno "Are you sure you want to install pyenv?"; then
	git clone https://github.com/pyenv/pyenv.git ~/.pyenv
fi

echo ""
info "Installation completed."
info "Please run following command \"exec \$SHELL\" to run zsh."
